# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..clients.client_gpt4 import GPT4
from ..functions.fx_extractorderinfo2 import BAMLExtractOrderInfo2
from ..types.classes.cls_item import Item
from ..types.classes.cls_orderinfo2 import OrderInfo2
from ..types.partial.classes.cls_item import PartialItem
from ..types.partial.classes.cls_orderinfo2 import PartialOrderInfo2
from baml_core.provider_manager.llm_response import LLMResponse
from baml_core.stream import AsyncStream
from baml_lib._impl.deserializer import Deserializer


import typing
# Impl: v2
# Client: GPT4
# An implementation of ExtractOrderInfo2.

__prompt_template = """\
Extract the following information from the text.
{arg}

---
Return the information in JSON following this schema:
{
  "id": string,
  "price": int,
  "items": {
    "name": string,
    "quantity": int
  }[]
}

JSON:\
"""

__input_replacers = {
    "{arg}"
}


# We ignore the type here because baml does some type magic to make this work
# for inline SpecialForms like Optional, Union, List.
__deserializer = Deserializer[OrderInfo2](OrderInfo2)  # type: ignore

# Add a deserializer that handles stream responses, which are all Partial types
__partial_deserializer = Deserializer[PartialOrderInfo2](PartialOrderInfo2)  # type: ignore







async def v2(arg: str, /) -> OrderInfo2:
    response = await GPT4.run_prompt_template(template=__prompt_template, replacers=__input_replacers, params=dict(arg=arg))
    deserialized = __deserializer.from_string(response.generated)
    return deserialized


def v2_stream(arg: str, /) -> AsyncStream[OrderInfo2, PartialOrderInfo2]:
    def run_prompt() -> typing.AsyncIterator[LLMResponse]:
        raw_stream = GPT4.run_prompt_template_stream(template=__prompt_template, replacers=__input_replacers, params=dict(arg=arg))
        return raw_stream
    stream = AsyncStream(stream_cb=run_prompt, partial_deserializer=__partial_deserializer, final_deserializer=__deserializer)
    return stream

BAMLExtractOrderInfo2.register_impl("v2")(v2, v2_stream)