# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from ..__do_not_import.generated_baml_client import baml
from ..baml_types import ComplexRestorationProject, IAnalyzeRestorationProject, IAnalyzeRestorationProjectStream, ManuscriptCondition, ManuscriptContext, ManuscriptState, MaterialOrigin, Restoration, TimePeriod
from baml_lib._impl.deserializer import Deserializer
from json import dumps
from pytest_baml.ipc_channel import BaseIPCChannel
from typing import Any


@baml.AnalyzeRestorationProject.test(stream=True)
async def test_europedoc(AnalyzeRestorationProjectImpl: IAnalyzeRestorationProjectStream, baml_ipc_channel: BaseIPCChannel):
    def to_str(item: Any) -> str:
        if isinstance(item, str):
            return item
        return dumps(item)

    content = to_str("A document from the time when Europe was rediscovering classical philosophies, thought to originate from a region known for its scholars, holds significant insights into the period's societal norms. The material, predominantly natural, includes inks derived from historical recipes and bindings consistent with the era's techniques. Restoration efforts focused on methods that are both physical, like cleaning and mending, and digital, for future generations. Initially described as worn but intact, the document now stands as a testament to enduring history, though some minor textual clarity issues remain. Preservation actions emphasized both the tangible and intangible heritage.\n")
    deserializer = Deserializer[str](str) # type: ignore
    param = deserializer.from_string(content)
    async with AnalyzeRestorationProjectImpl(param) as stream:
        async for response in stream.parsed_stream:
            baml_ipc_channel.send("partial_response", response.json())

        await stream.get_final_response()

